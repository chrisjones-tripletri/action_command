#!/usr/bin/env ruby
require 'open3'
require 'colorize'

def print_lines(lines)
  lines.each { |line| puts line }
end

Open3.popen3('rake deploy') do |_stdin, stdout, _stderr|
  r_offenses    = /(\d+)\s+files.*,\s+(\d+)\s+offense/
  r_no_offenses = /(\d+)\s+files.*,\s+no\s+offenses/
  r_documented  = /(\d+.?\d+)%\s+document/
  r_rspec       = /(\d+)\s+examples,\s+(\d+)\s+failure/
  r_coverage    = /Coverage.+LOC\s+\((\d+[\.]?\d+)%/
  
  lines_cur = []
  until stdout.eof?
    line = stdout.readline
    lines_cur << line
    line.scan(r_offenses) do |files, offenses|
      print_lines(lines_cur)
      puts "rubocop: #{offenses[0]} offenses in #{files[0]} files.".red
    end
    
    line.scan(r_no_offenses) do |files|
      puts "rubocop: 0 offenses in #{files[0]} files".green
      lines_cur = []
    end
    
    line.scan(r_documented) do |percent|
      percent = percent[0].to_f
      ok = percent > 95
      color = ok ? :green : :red
      print_lines(lines_cur) unless ok
      puts "yard: #{percent}% documented".colorize(color)
      lines_cur = []
    end
    
    line.scan(r_rspec) do |examples, failures|
      failures = failures[0].to_i
      ok = failures == 0
      color = ok ? :green : :red
      print_lines(lines_cur) unless ok
      puts "rspec: #{failures} failures in #{examples[0]} examples".colorize(color)
      lines_cur = []
    end
    
    line.scan(r_coverage) do |percent|
      percent = percent[0].to_f
      ok = percent > 95
      print_lines(lines_cur) unless ok
      color = ok ? :green : :red
      puts "coverage: #{percent} test coverage".colorize(color)
      lines_cur = []
      
    end
  end
end
